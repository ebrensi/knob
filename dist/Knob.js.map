{"mappings":"YAEO,SAASA,EAAaC,GAC3B,MAAMC,EAAWC,SAASC,iBACpBC,EAASF,SAASG,oBAClBC,EAA4BN,EAAKM,OACjCC,EAAuBP,EAAKO,QAC5BC,EAAcD,EAAQC,YAE5BF,EAAOG,cAAgB,SAAUC,GAC/BA,EAAEC,iBACF,MAAMC,EAmDV,SAAmBC,GACjB,MAAMC,EAAkB,CAAEC,EAAG,EAAGC,EAAG,GACnC,KAAOH,GACLC,EAAOC,GAAKF,EAAGI,WACfH,EAAOE,GAAKH,EAAGK,UACfL,EAAwBA,EAAGM,aAG7B,OAAOL,EA3DUM,CAAUd,GAEzB,SAASe,EAAYC,GACnBtB,EAAKuB,SAuBX,SACEhB,EACAQ,EACAC,EACAJ,GAEA,MAAMY,EAAM,EAAIC,KAAKC,GACfC,EAAKpB,EAAQqB,MAAQ,EACrBC,EAAYtB,EAAQsB,SAAWJ,KAAKC,GAAM,IAC1CI,EAAevB,EAAQuB,YAAcL,KAAKC,GAAM,IAEtD,IAAIK,EACFN,KAAKO,MAAMjB,GAAKH,EAAOG,EAAIY,KAAOX,EAAIJ,EAAOI,EAAIW,IAAOG,EAEtDD,IAAaL,GAAOO,EAAQ,GAAKA,GAAQ,GAC3CA,EAAQ,EACCA,EAAQ,IACjBA,GAASP,GAGX,MAAMV,KACD,GAAOiB,GAASxB,EAAQ0B,IAAM1B,EAAQ2B,KAAQL,GAAYtB,EAAQ2B,IACvE,OAAOT,KAAKQ,IAAIR,KAAKS,IAAIpB,EAAQP,EAAQ0B,KAAM1B,EAAQ2B,KA7CrCC,CAAU5B,EAASe,EAAEc,MAAOd,EAAEe,MAAOzB,IAAS,GAW1DJ,GACFR,EAAKsC,UAAUC,IAAI/B,GAGrBP,EAAS,cAAeoB,GACxBpB,EAAS,aAbT,SAASuC,EAAUlB,GACbd,GACFR,EAAKsC,UAAUG,OAAOjC,GAExBJ,EAAO,cAAeiB,GACtBjB,EAAO,YAAaoC,MAUtBnB,EAAYX,6GC9BhB,MAIMgC,EAAiB,CACrBC,MAAO,GAEPT,IAAK,EACLD,IAAK,IACLW,KAAM,EAENC,QAAoB,EACpBC,UAAW,IACXC,QAA8C,OAC9CC,UAAU,EACVC,cAAc,EAEdrB,MAAO,IACPsB,OAAQ,IAERC,QAAS,UACTC,QAAS,UACTC,MAAO,GACPC,WAAY,OAEZxB,YAAa,EACbD,SAAU,IAEV0B,UAAW,GACX/C,YAAa,IAkBR,SAASgD,EAAKC,GACnB,MAAMlD,EAAU,IAAKmC,KAAmBe,GAGlCnD,EAASJ,SAASwD,cAAc,UACtCpD,EAAO4C,OAAS3C,EAAQ2C,OACxB5C,EAAOsB,MAAQrB,EAAQqB,MACvBtB,EAAOqD,MAAMC,SAAW,WACxB,MAAMC,EAAgCvD,EAAOwD,WAAW,MAGlDC,EACJtC,KAAKQ,IACH+B,OAAOvC,KAAKwC,IAAI1D,EAAQ0B,MAAMiC,OAC9BF,OAAOvC,KAAKwC,IAAI1D,EAAQ2B,MAAMgC,OAC9B,GACE,EAEAC,EAAQjE,SAASwD,cAAc,SACrCS,EAAMxB,MAAQqB,OAAOzD,EAAQoC,OAC7BwB,EAAMC,SAAW7D,EAAQyC,SAEzB,MAAMqB,EAAa9D,EAAQqB,MAAQ,EAAKrB,EAAQuC,UAEhDwB,OAAOC,OAAOJ,EAAMR,MAAO,CACzBC,SAAU,WACVY,IAAQjE,EAAQqB,MAAQ,EAAIrB,EAAQqB,MAAQ,EAAvC,KACL6C,KAAM,GAAGJ,MACTzC,MAAUrB,EAAQqB,MAAoB,EAAZyC,EAAnB,KACP,iBAAkB,SAClBK,OAAQ,EACRC,WAAY,OACZC,KAAM,QAASrE,EAAQqB,MAAQmC,GAAc,YAC7C,aAAc,SACdc,MAAOtE,EAAQ6C,QACf0B,QAAS,MACT,qBAAsB,OACtBC,QAAUxE,EAAQ0C,aAAwB,GAAT,SAInC,MAAMI,EAAQnD,SAASwD,cAAc,QACrCY,OAAOC,OAAOlB,EAAMM,MAAO,CACzBkB,MAAOtE,EAAQ+C,WACfM,SAAU,WACVoB,OAAQ,EACR,YAAa,MACb,aAAc,SACd,iBAAkB,OAClBR,IAAQjE,EAAQqB,MAAQ,EAAIrB,EAAQqB,MAAQ,EAAI,EAA3C,KACL6C,KAAM,EACNQ,MAAO,IAET5B,EAAM6B,UAAY3E,EAAQ8C,MAG1B,MAAM8B,EAAiBjF,SAASwD,cAAc,OAC9CY,OAAOC,OAAOY,EAAIxB,MAAO,CACvBoB,QAAS,eACTnB,SAAU,WACVV,OAAQ,GAAG3C,EAAQ2C,WACnBtB,MAAO,GAAGrB,EAAQqB,UAClB,eAAgB,SAEdrB,EAAQgD,WACV4B,EAAI7C,UAAUC,IAAIhC,EAAQgD,WAG5B4B,EAAIC,YAAY9E,GAChB6E,EAAIC,YAAYjB,GAChBgB,EAAIC,YAAY/B,GAGhBiB,OAAOC,OAAOY,EAAK,CA1HrB5E,QA0HuBA,EA1HvBD,OA0HgCA,EA1HhC6D,MA0HwCA,EA1HxCd,MA0H+CA,IAE7C,IAEIgC,EAFAC,EAAgB/E,EAAQoC,MACxB4C,GAAY,EAGhB,SAASC,IACHF,IAAkB/E,EAAQoC,MAC5B4C,GAAY,GAEZA,GAAY,EACZD,EAAgB/E,EAAQoC,MACxBkB,EAAI4B,UAAU,EAAG,EAAGnF,EAAOsB,MAAOtB,EAAO4C,QACzCwC,EAAKnF,EAASsD,GACdM,EAAMxB,MAAQqB,OAAOzD,EAAQoC,OAC7BgD,OAAOC,sBAAsBJ,IAoCjC,OA/BAL,EAAIU,SAAW,IAAMtF,EAAQoC,MAE7BwC,EAAI5D,SAAW,CAACoB,EAAemD,KAO7B,GANAnD,EAAQlB,KAAKS,IAAI3B,EAAQ0B,IAAKR,KAAKQ,IAAI1B,EAAQ2B,IAAKS,IACpDpC,EAAQoC,MAAQA,EAChBwC,EAAIxC,MAAQA,EACP4C,GACHC,KAEY,IAAVM,GAAkBX,EAAIY,SAAU,CAIlC,IAAIC,EAAUX,EACdM,OAAOM,aAAaD,GACpBA,EAAUL,OAAOO,WAAWf,EAAIY,SA3Jf,IA4JjBV,EAAWW,IAIf7B,EAAMhE,iBAAiB,UAAWmB,IAChC,MAAMT,EAAuBS,EAAE6E,OAC/BhB,EAAI5D,YAAYV,EAAG8B,UAGrB+C,EAAKnF,EAASsD,GAETtD,EAAQyC,UACXjD,EAA0BoF,GAGRA,EAGtB,SAASO,EAAKnF,EAAsBsD,GAElC,MAAM/B,EAAevB,EAAQuB,YAAcL,KAAKC,GAAM,IAChDG,EAAYtB,EAAQsB,SAAWJ,KAAKC,GAAM,IAE1CK,GACFxB,EAAQoC,MAAQpC,EAAQ2B,KAAOL,GAAatB,EAAQ0B,IAAM1B,EAAQ2B,KAEhEkE,EAAK7F,EAAQqB,MAAQ,EACrByC,EAAY+B,EAAK7F,EAAQuC,UACzBuD,EAASD,EAAK/B,EAAY,EAE1BiC,EAAa,IAAM7E,KAAKC,GAAKI,EAC7ByE,EAAW,IAAM9E,KAAKC,GAAKI,EAAcD,EAE/C,IAAI2E,EAAUF,EACVG,EAAQD,EAAUzE,EAEtB,GAAIxB,EAAQsC,OAAQ,CAClB,MAEM6D,IADe,IAAnBnG,EAAQsC,OAAkBtC,EAAQuC,UAAYvC,EAAQsC,QACzB,KAAO,EACtC2D,EAAUC,EAAQC,EAClBD,GAAgBC,EAGlB7C,EAAIQ,UAAYA,EAChBR,EAAId,QAAUxC,EAAQwC,QAEtBc,EAAI8C,YACJ9C,EAAI+C,YAAcrG,EAAQ4C,QAC1BU,EAAIgD,IAAIT,EAAIA,EAAIC,EAAQE,EAAUD,GAAY,GAC9CzC,EAAIiD,SAEJjD,EAAI8C,YACJ9C,EAAI+C,YAAcrG,EAAQ6C,QAC1BS,EAAIgD,IAAIT,EAAIA,EAAIC,EAAQG,EAASC,GAAO,GACxC5C,EAAIiD","sources":["src/handleChange.ts","src/Knob.ts"],"sourcesContent":["import type { KnobElement, KnobOptions } from \"./Knob\";\n\nexport function handleChange(knob: KnobElement) {\n  const D_listen = document.addEventListener;\n  const D_mute = document.removeEventListener;\n  const canvas = <HTMLCanvasElement>knob.canvas;\n  const options = <KnobOptions>knob.options;\n  const activeClass = options.activeClass;\n\n  canvas.onpointerdown = function (e: PointerEvent) {\n    e.preventDefault();\n    const offset = getOffset(canvas);\n\n    function pointerMove(e: PointerEvent) {\n      knob.setValue(xyToValue(options, e.pageX, e.pageY, offset), true);\n    }\n\n    function pointerUp(e: PointerEvent) {\n      if (activeClass) {\n        knob.classList.remove(activeClass);\n      }\n      D_mute(\"pointermove\", pointerMove);\n      D_mute(\"pointerup\", pointerUp);\n    }\n\n    if (activeClass) {\n      knob.classList.add(activeClass);\n    }\n\n    D_listen(\"pointermove\", pointerMove);\n    D_listen(\"pointerup\", pointerUp);\n\n    pointerMove(e);\n  };\n}\n\ntype point2D = { x: number; y: number };\nfunction xyToValue(\n  options: KnobOptions,\n  x: number,\n  y: number,\n  offset: point2D\n) {\n  const PI2 = 2 * Math.PI;\n  const w2 = options.width / 2;\n  const angleArc = (options.angleArc * Math.PI) / 180;\n  const angleOffset = (options.angleOffset * Math.PI) / 180;\n\n  let angle =\n    Math.atan2(x - (offset.x + w2), -(y - offset.y - w2)) - angleOffset;\n\n  if (angleArc !== PI2 && angle < 0 && angle > -0.5) {\n    angle = 0;\n  } else if (angle < 0) {\n    angle += PI2;\n  }\n\n  const result =\n    ~~(0.5 + (angle * (options.max - options.min)) / angleArc) + options.min;\n  return Math.max(Math.min(result, options.max), options.min);\n}\n\nfunction getOffset(el: HTMLCanvasElement) {\n  const result: point2D = { x: 0, y: 0 };\n  while (el) {\n    result.x += el.offsetLeft;\n    result.y += el.offsetTop;\n    el = <HTMLCanvasElement>el.offsetParent;\n  }\n\n  return result;\n}\n","import { handleChange } from \"./handleChange\";\n\nconst DEBOUNCE_DELAY = 10; // ms\n\ntype CursorType = boolean | number;\n\nconst DefaultOptions = {\n  value: 50,\n\n  min: 0,\n  max: 100,\n  step: 1,\n\n  cursor: <CursorType>false,\n  thickness: 0.35,\n  lineCap: <CanvasRenderingContext2D[\"lineCap\"]>\"butt\",\n  readOnly: false,\n  displayInput: true,\n\n  width: 200,\n  height: 200,\n\n  bgColor: \"#EEEEEE\",\n  fgColor: \"#87CEEB\",\n  label: \"\",\n  labelColor: \"#888\",\n\n  angleOffset: 0,\n  angleArc: 360,\n\n  className: \"\",\n  activeClass: \"\",\n};\n\nexport type KnobOptions = typeof DefaultOptions\n\ntype KnobProperties = {\n  options: KnobOptions;\n  canvas: HTMLCanvasElement;\n  input: HTMLInputElement;\n  label: HTMLSpanElement;\n  value: number;\n  getValue: () => number;\n  setValue: (value: number, event?: boolean) => void;\n}\n\ntype ProtoKnob = Partial<KnobProperties> & HTMLDivElement\nexport type KnobElement = KnobProperties & HTMLDivElement\n\nexport function Knob(knobOptions: Partial<KnobOptions>): KnobElement {\n  const options = { ...DefaultOptions, ...knobOptions };\n\n  // Create Canvas Element\n  const canvas = document.createElement(\"canvas\");\n  canvas.height = options.height;\n  canvas.width = options.width;\n  canvas.style.position = \"absolute\";\n  const ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n\n  // Create Input Element\n  const fontScale =\n    Math.max(\n      String(Math.abs(options.max)).length,\n      String(Math.abs(options.min)).length,\n      2\n    ) + 2;\n\n  const input = document.createElement(\"input\");\n  input.value = String(options.value);\n  input.disabled = options.readOnly;\n\n  const lineWidth = (options.width / 2) * options.thickness;\n\n  Object.assign(input.style, {\n    position: \"absolute\",\n    top: `${options.width / 2 - options.width / 7}px`,\n    left: `${lineWidth}px`,\n    width: `${options.width - lineWidth * 2}px`,\n    \"vertical-align\": \"middle\",\n    border: 0,\n    background: \"none\",\n    font: `bold ${(options.width / fontScale) >> 0}px Arial`,\n    \"text-align\": \"center\",\n    color: options.fgColor,\n    padding: \"0px\",\n    \"-webkit-appearance\": \"none\",\n    display: !options.displayInput ? \"none\" : \"\",\n  });\n\n  // Create Label Element\n  const label = document.createElement(\"span\");\n  Object.assign(label.style, {\n    color: options.labelColor,\n    position: \"absolute\",\n    bottom: 0,\n    \"font-size\": \"80%\",\n    \"text-align\": \"center\",\n    \"pointer-events\": \"none\",\n    top: `${options.width / 2 + options.width / 8 - 3}px`,\n    left: 0,\n    right: 0,\n  });\n  label.innerHTML = options.label;\n\n  // Create div element\n  const div: ProtoKnob = document.createElement(\"div\");\n  Object.assign(div.style, {\n    display: \"inline-block\",\n    position: \"relative\",\n    height: `${options.height}px`,\n    width: `${options.width}px`,\n    \"touch-action\": \"none\",\n  });\n  if (options.className) {\n    div.classList.add(options.className);\n  }\n\n  div.appendChild(canvas);\n  div.appendChild(input);\n  div.appendChild(label);\n\n  // Attach HTML Elements to the div element\n  Object.assign(div, { options, canvas, input, label });\n\n  let renderedValue = options.value;\n  let animating = false;\n  let _timeout: number\n\n  function refreshCanvas() {\n    if (renderedValue === options.value) {\n      animating = false;\n    } else {\n      animating = true;\n      renderedValue = options.value;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      draw(options, ctx);\n      input.value = String(options.value);\n      window.requestAnimationFrame(refreshCanvas);\n    }\n  }\n\n  // Attach methods to the div\n  div.getValue = () => options.value;\n\n  div.setValue = (value: number, event?: boolean) => {\n    value = Math.min(options.max, Math.max(options.min, value));\n    options.value = value;\n    div.value = value;\n    if (!animating) {\n      refreshCanvas();\n    }\n    if (event === true && div.onchange) {\n      /*\n       * Perform debounced callback\n       */\n      let timeout = _timeout;\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(div.onchange, DEBOUNCE_DELAY);\n      _timeout = timeout;\n    }\n  };\n\n  input.addEventListener(\"change\", (e) => {\n    const el = <HTMLInputElement>e.target;\n    div.setValue?.(+el.value);\n  });\n\n  draw(options, ctx);\n\n  if (!options.readOnly) {\n    handleChange(<KnobElement>div);\n  }\n\n  return <KnobElement>div;\n}\n\nfunction draw(options: KnobOptions, ctx: CanvasRenderingContext2D) {\n  // deg to rad\n  const angleOffset = (options.angleOffset * Math.PI) / 180;\n  const angleArc = (options.angleArc * Math.PI) / 180;\n\n  const angle =\n    ((options.value - options.min) * angleArc) / (options.max - options.min);\n\n  const xy = options.width / 2;\n  const lineWidth = xy * options.thickness;\n  const radius = xy - lineWidth / 2;\n\n  const startAngle = 1.5 * Math.PI + angleOffset;\n  const endAngle = 1.5 * Math.PI + angleOffset + angleArc;\n\n  let startAt = startAngle;\n  let endAt = startAt + angle;\n\n  if (options.cursor) {\n    const cursorSize =\n      options.cursor === true ? options.thickness : options.cursor;\n    const cursorExt = cursorSize / 100 || 1;\n    startAt = endAt - cursorExt;\n    endAt = endAt + cursorExt;\n  }\n\n  ctx.lineWidth = lineWidth;\n  ctx.lineCap = options.lineCap;\n\n  ctx.beginPath();\n  ctx.strokeStyle = options.bgColor;\n  ctx.arc(xy, xy, radius, endAngle, startAngle, true);\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.strokeStyle = options.fgColor;\n  ctx.arc(xy, xy, radius, startAt, endAt, false);\n  ctx.stroke();\n}\n"],"names":["$58f0bebe79a8679a$export$1ba2cb844e41b315","knob","D_listen","document","addEventListener","D_mute","removeEventListener","canvas","options","activeClass","onpointerdown","e1","preventDefault","offset","el","result","x","y","offsetLeft","offsetTop","offsetParent","$58f0bebe79a8679a$var$getOffset","pointerMove","e","setValue","PI2","Math","PI","w2","width","angleArc","angleOffset","angle","atan2","max","min","$58f0bebe79a8679a$var$xyToValue","pageX","pageY","classList","add","pointerUp","remove","$0dc4583b9970181e$var$DefaultOptions","value","step","cursor","thickness","lineCap","readOnly","displayInput","height","bgColor","fgColor","label","labelColor","className","$0dc4583b9970181e$export$2403d36fd4a1a72","knobOptions","createElement","style","position","ctx","getContext","fontScale","String","abs","length","input","disabled","lineWidth","Object","assign","top","left","border","background","font","color","padding","display","bottom","right","innerHTML","div","appendChild","_timeout","renderedValue","animating","refreshCanvas","clearRect","$0dc4583b9970181e$var$draw","window","requestAnimationFrame","getValue","event","onchange","timeout","clearTimeout","setTimeout","target","xy","radius","startAngle","endAngle","startAt","endAt","cursorExt","beginPath","strokeStyle","arc","stroke"],"version":3,"file":"Knob.js.map"}