{"mappings":"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","sources":["src/handleChange.ts","src/Knob.ts"],"sourcesContent":["import type { KnobElement,  KnobOptions } from \"./Knob\"\n\nexport function handleChange(knob: KnobElement) {\n  const D_listen = document.addEventListener\n  const D_mute = document.removeEventListener\n  const canvas = <HTMLCanvasElement>knob.canvas\n  const options = <KnobOptions>knob.options\n  const activeClass = options.activeClass;\n\n  canvas.onmousedown =  function (e: MouseEvent) {\n    e.preventDefault();\n    const offset = getOffset(canvas);\n\n    function mouseMove(e: MouseEvent) {\n      knob.setValue(xyToValue(options, e.pageX, e.pageY, offset), true);\n    }\n\n    function mouseUp(e: MouseEvent) {\n      if (activeClass) {\n        knob.classList.remove(activeClass);\n      }\n      D_mute(\"mousemove\", mouseMove);\n      D_mute(\"mouseup\", mouseUp);\n    }\n\n    if (activeClass) {\n      knob.classList.add(activeClass);\n    }\n\n    D_listen(\"mousemove\", mouseMove);\n    D_listen(\"mouseup\", mouseUp);\n\n    mouseMove(e);\n  }\n\n  canvas.ontouchstart =  function (e: TouchEvent) {\n    e.preventDefault();\n\n    const touchIndex = e.touches.length - 1;\n    const offset = getOffset(canvas);\n\n    function touchMove(e: TouchEvent) {\n      knob.setValue(\n        xyToValue(\n          options,\n          e.touches[touchIndex].pageX,\n          e.touches[touchIndex].pageY,\n          offset\n        ),\n        true\n      );\n    }\n\n    function touchEnd() {\n      if (activeClass) {\n        knob.classList.remove(activeClass);\n      }\n      D_mute(\"touchmove\", touchMove);\n      D_mute(\"touchend\", touchEnd);\n    }\n\n    if (activeClass) {\n      knob.classList.add(activeClass);\n    }\n\n    D_listen(\"touchmove\", touchMove);\n    D_listen(\"touchend\", touchEnd);\n\n    touchMove(e);\n  }\n};\n\ntype point2D = { x: number, y: number }\nfunction xyToValue(options: KnobOptions, x: number, y: number, offset: point2D) {\n  const PI2 = 2 * Math.PI;\n  const w2 = options.width / 2;\n  const angleArc = (options.angleArc * Math.PI) / 180;\n  const angleOffset = (options.angleOffset * Math.PI) / 180;\n\n  let angle =\n    Math.atan2(x - (offset.x + w2), -(y - offset.y - w2)) - angleOffset;\n\n  if (angleArc !== PI2 && angle < 0 && angle > -0.5) {\n    angle = 0;\n  } else if (angle < 0) {\n    angle += PI2;\n  }\n\n  const result =\n    ~~(0.5 + (angle * (options.max - options.min)) / angleArc) + options.min;\n  return Math.max(Math.min(result, options.max), options.min);\n}\n\nfunction getOffset(el: HTMLCanvasElement) {\n  const result: point2D = { x: 0, y: 0 };\n  while (el) {\n    result.x += el.offsetLeft;\n    result.y += el.offsetTop;\n    el = <HTMLCanvasElement>el.offsetParent;\n  }\n\n  return result;\n}\n","import { handleChange } from \"./handleChange\";\n\nconst DEBOUNCE_DELAY = 16; // ms\n\ntype CursorType = boolean | number;\n\nconst DefaultOptions = {\n  value: 50,\n\n  min: 0,\n  max: 100,\n  step: 1,\n\n  cursor: <CursorType>false,\n  thickness: 0.35,\n  lineCap: <CanvasRenderingContext2D[\"lineCap\"]>\"butt\",\n  readOnly: false,\n  displayInput: true,\n\n  width: 200,\n  height: 200,\n\n  bgColor: \"#EEEEEE\",\n  fgColor: \"#87CEEB\",\n  label: \"\",\n  labelColor: \"#888\",\n\n  angleOffset: 0,\n  angleArc: 360,\n\n  className: \"\",\n  activeClass: \"\",\n};\n\nexport type KnobOptions = typeof DefaultOptions & {\n  callback?: (value: number) => void;\n};\n\ntype KnobProperties = {\n  options: KnobOptions;\n  canvas: HTMLCanvasElement;\n  input: HTMLInputElement;\n  label: HTMLSpanElement;\n  value: number;\n  getValue: () => number;\n  setValue: (value: number, event?: boolean) => void;\n}\n\ntype ProtoKnob = Partial<KnobProperties> & HTMLDivElement\nexport type KnobElement = KnobProperties & HTMLDivElement\n\nexport function Knob(knobOptions: Partial<KnobOptions>): KnobElement {\n  const options = { ...DefaultOptions, ...knobOptions };\n\n  // Create Canvas Element\n  const canvas = document.createElement(\"canvas\");\n  canvas.height = options.height;\n  canvas.width = options.width;\n  canvas.style.position = \"absolute\";\n  const ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\n\n  // Create Input Element\n  const fontScale =\n    Math.max(\n      String(Math.abs(options.max)).length,\n      String(Math.abs(options.min)).length,\n      2\n    ) + 2;\n\n  const input = document.createElement(\"input\");\n  input.value = String(options.value);\n  input.disabled = options.readOnly;\n\n  const lineWidth = (options.width / 2) * options.thickness;\n\n  Object.assign(input.style, {\n    position: \"absolute\",\n    top: `${options.width / 2 - options.width / 7}px`,\n    left: `${lineWidth}px`,\n    width: `${options.width - lineWidth * 2}px`,\n    \"vertical-align\": \"middle\",\n    border: 0,\n    background: \"none\",\n    font: `bold ${(options.width / fontScale) >> 0}px Arial`,\n    \"text-align\": \"center\",\n    color: options.fgColor,\n    padding: \"0px\",\n    \"-webkit-appearance\": \"none\",\n    display: !options.displayInput ? \"none\" : \"\",\n  });\n\n  // Create Label Element\n  const label = document.createElement(\"span\");\n  Object.assign(label.style, {\n    color: options.labelColor,\n    position: \"absolute\",\n    bottom: 0,\n    \"font-size\": \"80%\",\n    \"text-align\": \"center\",\n    \"pointer-events\": \"none\",\n    top: `${options.width / 2 + options.width / 8 - 3}px`,\n    left: 0,\n    right: 0,\n  });\n  label.innerHTML = options.label;\n\n  // Create div element\n  const div: ProtoKnob = document.createElement(\"div\");\n  Object.assign(div.style, {\n    display: \"inline-block\",\n    position: \"relative\",\n    height: `${options.height}px`,\n    width: `${options.width}px`,\n  });\n  if (options.className) {\n    div.classList.add(options.className);\n  }\n\n  div.appendChild(canvas);\n  div.appendChild(input);\n  div.appendChild(label);\n\n  // Attach HTML Elements to the div element\n  Object.assign(div, { options, canvas, input, label });\n\n  let renderedValue = options.value;\n  let animating = false;\n  let _timeout: number\n\n  function refreshCanvas() {\n    if (renderedValue === options.value) {\n      animating = false;\n    } else {\n      animating = true;\n      renderedValue = options.value;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      draw(options, ctx);\n      input.value = String(options.value);\n      window.requestAnimationFrame(refreshCanvas);\n    }\n  }\n\n  // Attach methods to the div\n  div.getValue = () => options.value;\n\n  div.setValue = (value: number, event?: boolean) => {\n    value = Math.min(options.max, Math.max(options.min, value));\n    options.value = value;\n    div.value = value;\n    if (!animating) {\n      refreshCanvas();\n    }\n    if (event === true && div.onchange) {\n      /*\n       * Perform debounced callback\n       */\n      let timeout = _timeout;\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(div.onchange, DEBOUNCE_DELAY);\n      _timeout = timeout;\n    }\n  };\n\n  input.addEventListener(\"change\", (e) => {\n    const el = <HTMLInputElement>e.target;\n    div.setValue?.(+el.value);\n  });\n\n  draw(options, ctx);\n\n  if (!options.readOnly) {\n    handleChange(<KnobElement>div);\n  }\n\n  return <KnobElement>div;\n}\n\nfunction draw(options: KnobOptions, ctx: CanvasRenderingContext2D) {\n  // deg to rad\n  const angleOffset = (options.angleOffset * Math.PI) / 180;\n  const angleArc = (options.angleArc * Math.PI) / 180;\n\n  const angle =\n    ((options.value - options.min) * angleArc) / (options.max - options.min);\n\n  const xy = options.width / 2;\n  const lineWidth = xy * options.thickness;\n  const radius = xy - lineWidth / 2;\n\n  const startAngle = 1.5 * Math.PI + angleOffset;\n  const endAngle = 1.5 * Math.PI + angleOffset + angleArc;\n\n  let startAt = startAngle;\n  let endAt = startAt + angle;\n\n  if (options.cursor) {\n    const cursorSize =\n      options.cursor === true ? options.thickness : options.cursor;\n    const cursorExt = cursorSize / 100 || 1;\n    startAt = endAt - cursorExt;\n    endAt = endAt + cursorExt;\n  }\n\n  ctx.lineWidth = lineWidth;\n  ctx.lineCap = options.lineCap;\n\n  ctx.beginPath();\n  ctx.strokeStyle = options.bgColor;\n  ctx.arc(xy, xy, radius, endAngle, startAngle, true);\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.strokeStyle = options.fgColor;\n  ctx.arc(xy, xy, radius, startAt, endAt, false);\n  ctx.stroke();\n}\n"],"names":["$58f0bebe79a8679a$var$xyToValue","options","x","y","offset","PI2","Math","PI","w2","width","angleArc","angleOffset","angle","atan2","result","max","min","$58f0bebe79a8679a$var$getOffset","el","offsetLeft","offsetTop","offsetParent","$0dc4583b9970181e$var$DefaultOptions","value","step","cursor","thickness","lineCap","readOnly","displayInput","height","bgColor","fgColor","label","labelColor","className","activeClass","$0dc4583b9970181e$export$2403d36fd4a1a72","knobOptions","canvas","document","createElement","style","position","ctx","getContext","fontScale","String","abs","length","input","disabled","lineWidth","Object","assign","top","left","border","background","font","color","padding","display","bottom","right","innerHTML","div","classList","add","appendChild","_timeout","renderedValue","animating","refreshCanvas","clearRect","$0dc4583b9970181e$var$draw","window","requestAnimationFrame","getValue","setValue","event","onchange","timeout","clearTimeout","setTimeout","addEventListener","e","target","knob","D_listen","D_mute","removeEventListener","onmousedown","e1","preventDefault","mouseMove","pageX","pageY","mouseUp","remove","ontouchstart","e2","touchIndex","touches","touchMove","touchEnd","$58f0bebe79a8679a$export$1ba2cb844e41b315","xy","radius","startAngle","endAngle","startAt","endAt","cursorExt","beginPath","strokeStyle","arc","stroke"],"version":3,"file":"Knob.js.map"}